#install.packages("plot3D")
library(plot3D)

rm(list=ls())
directory <- "/Users/andrew/Dropbox/Papers/2-step\ online\ trade_empirics/Data"

# load database snapshots list
setwd(directory)
files_list <- list.files(path = directory, pattern = "*.RData")

# the length of panel data (in time)
T <- length(files_list)

# initialize new database which will be a merge of all databases
new_data <- array(NA, c(300,10000,3,T), 
                  dimnames=list(shop=rep(NA,300),model=rep(NA,10000),slice=list("bid","position","price"),time=seq(1,T)))

start_time <- Sys.time()

# merging data to the new database
for(t in 1:T){
  # load data snapshot from file
  load(files_list[t])
  #remove NA shops from data (technical operation due to new_data initialized as static array).
  data <- data[!is.na(dimnames(data)[[1]]),,]
  
  #form new list of shops as union of already existing in new_data and new shops from loaded dataframe
  shop_names_new <- c(unique(dimnames(new_data)$shop),dimnames(data)$shop[which(!(dimnames(data)$shop %in% dimnames(new_data)$shop))])
  dimnames(new_data)$shop[1:length(shop_names_new)] <- shop_names_new
  
  #form new list of models as union of already existing in new_data and new models from loaded dataframe
  model_names_new <- c(unique(dimnames(new_data)$model),dimnames(data)$model[which(!(dimnames(data)$model %in% dimnames(new_data)$model))])
  dimnames(new_data)$model[1:length(model_names_new)] <- model_names_new
  
  #Here I write in t-slice of new_data actual data from dataframe
  for(i in na.omit(dimnames(data)$shop)){
    for(j in na.omit(dimnames(data)$model)){
      new_data[i,j,,t] <- data[i,j,]
    }
  }
  #time control
  cat(round(difftime(Sys.time(), start_time, units = c("secs")),2),"secs, t =",t,"\n")
  #remove dataframe to prevent problems with using variable "data" on the next step
  remove(data)
}

# remove NA shops (technical operation due to new_data initialized as static array).
new_data <- new_data[!is.na(dimnames(new_data)[[1]]),,,]
new_data <- new_data[,!is.na(dimnames(new_data)[[2]]),,]


################################################Experiments

new_data_2 <- new_data
new_data_2[is.na(new_data_2[,,,])] <- 0
new_data_2[new_data_2[,,,]>0] <- -1

bids <- matrix(data = NA, nrow = dim(new_data)[1], ncol = T)
for(i in 1:dim(new_data)[1]){
  for(j in 1:dim(new_data)[2]){
    if(sum(!is.na(new_data[i,j,"bid",]))>0){
      bids[i,] <- new_data[i,j,"bid",]
      break
    }
  }
}

#who changes bids
n_bids_change <- rep(0,T)
names(n_bids_change) <- 0:(T-1)
for(i in 1:dim(new_data_2)[1]){
  #if(length(apply(bids,1,unique)[[i]])==1){n_bids_change[1] <- n_bids_change[1] + 1}
  if(length(apply(bids,1,unique)[[i]])==2){n_bids_change[2] <- n_bids_change[2] + 1}
  if(length(apply(bids,1,unique)[[i]])==3){n_bids_change[3] <- n_bids_change[3] + 1}
  if(length(apply(bids,1,unique)[[i]])==4){n_bids_change[4] <- n_bids_change[4] + 1}
  if(length(apply(bids,1,unique)[[i]])==5){n_bids_change[5] <- n_bids_change[5] + 1}
  if(length(apply(bids,1,unique)[[i]])==6){n_bids_change[6] <- n_bids_change[6] + 1}
  if(length(apply(bids,1,unique)[[i]])==7){n_bids_change[7] <- n_bids_change[7] + 1}
}

barplot(n_bids_change[2:4], col = rgb(0, 0, 1, alpha=0), xlab = "# of changes")

#number of products per shop
hist(rowSums(new_data_2[,,1,1])*(-1),breaks = seq(0,700,25), xlab = "Number of products per shop", main = "")
hist(rowSums(new_data_2[,,1,1])*(-1),breaks = seq(0,700,10), xlab = "Number of products per shop", main = "")

#who changes product composition
n_of_models <- matrix(0, ncol = dim(new_data)[2]-1, nrow = dim(new_data)[1])
for(i in 2:dim(new_data_2)[1]){
  for(t in 1:T){
    n_of_models[i-1,t] <- length(new_data[i,!is.na(new_data[i,,3,t]),1,t])
  }
}
#how many times change
hist(rowSums(n_of_models[,1:(T-1)]!=n_of_models[,2:T]),breaks = seq(0,6,0.5), main = "", xlab = "# products composition was changed")

#by how many products change
diff <- n_of_models[,2:T]-n_of_models[,1:(T-1)]

vector_diff <- as.vector(diff)[(as.vector(diff)!=0)]

hist(vector_diff, main = "", xlab = "# of added products")
hist(vector_diff[abs(vector_diff)<50],breaks = seq(-50,50,1), main = "", xlab = "# of added products")

